---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared-tunnel
spec:
  selector:
    matchLabels:
      app: nginxsimplefile-tunnel
  replicas: 3 # You could also consider elastic scaling for this deployment
  template:
    metadata:
      labels:
        app: nginxsimplefile-tunnel
    spec:
      containers:
        - name: cloudflared
          image:
            cloudflare/cloudflared:2022.12.1
            #image: cloudflare/cloudflared:2023.2.1
          imagePullPolicy: Always
          args:
            - tunnel
            - --config
            - /etc/cloudflared/config/config.yaml
            - --metrics
            - 0.0.0.0:2000
            - run
          livenessProbe:
            httpGet:
              # Cloudflared has a /ready endpoint which returns 200 if and only if
              # it has an active connection to the edge.
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          ports:
            - name: tunnel-port
              containerPort: 2000
          volumeMounts:
            - name: tunnel-config
              mountPath: /etc/cloudflared/config
              readOnly: true
            - name: tunnel-cert-volume
              mountPath: /etc/cloudflared
              readOnly: true
            - name: tunnel-creds-volume
              mountPath: /etc/cloudflared/creds
              readOnly: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - nginxsimplefile-tunnel
              topologyKey:
                "kubernetes.io/hostname"
                #        podAntiAffinity:
                #          preferredDuringSchedulingIgnoredDuringExecution:
                #          - weight: 100
                #            podAffinityTerm:
                #              labelSelector:
                #                matchExpressions:
                #                  - key: app
                #                    operator: In
                #                    values:
                #                      - pocketshorten-tunnel
                #              topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: tunnel-cert-volume
          secret:
            secretName: cloudflare-nginxsimplefile-cert
        - name: tunnel-creds-volume
          secret:
            secretName: cloudflare-nginxsimplefile-creds
        - name: tunnel-config
          configMap:
            name: cloudflare-nginxsimplefile-configs
